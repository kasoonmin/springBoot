<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.springboot.member.dao.MemberDAO">
	<resultMap id="memResult" type="memberVO">
		<result property="userId" column="userId" />
		<result property="userPwd" column="userPwd" />
		<result property="userName" column="userName" />
		<result property="userBirth" column="userBirth" />
		<result property="userGender" column="userGender" />
		<result property="userType" column="userType" />
		<result property="userPhoneNumber" column="userPhoneNumber" />
	</resultMap>

	<select id="userIdOverlapCheck" resultType="String">
		<![CDATA[
			select userId
			from user
			where userId=#{userId}
		]]>
	</select>
	
	<select id="selectAllMemberList" resultMap="memResult">
		<![CDATA[
		 	select * from t_member order by joinDate desc
		 ]]>
	</select>
	
	<select id="selectName" resultType="String">
		<![CDATA[
			select name from user
			where id= 'ksb4150'
		]]>
	</select>
	
	<select id="selectPwd" resultType="int">
		<![CDATA[
			select pwd from user
			where id = 'ksb4150'
		]]>
	</select>
	
	<select id="selectMemberById" resultType="memberVO" parameterType="String">
		<![CDATA[
		
			select * from user
			where
			userId = #{userId}
			
		]]>
	</select>
	
	<select id="selectMemberByPwd" resultMap="memResult" parameterType="int">
		<![CDATA[
		
			select * from user
			where 
			pwd = #{pwd}
			
		]]>
	</select>
	
	 <!-- 아이디 찾기 -->
	 <select id="findId" resultType="memberVO" >
		<![CDATA[
		
			select userId
			from user 
			where userName=#{userName} and userPhoneNumber=#{userPhoneNumber}
	
		]]>
	</select> 
	
	<select id="idCheck" resultType="int">
		<![CDATA[
			select count(*) 
			from user
			where  userId = #{userId}
		]]>
	</select>
	
	<!-- 회원여부 확인 -->
	 <select id="pwFind_Lookup" resultType="memberVO" >
		<![CDATA[
			select *
			from user 
			where userId=#{userId}
			
		]]>
	</select> 
					
	
	<!-- 비밀번호 조회 -->
	 <select id="pwFind_select" parameterType="memberVO" resultType="memberVO">
		<![CDATA[
			select userPwd
			from user 
			where userId=#{userId} and userName=#{userName}
			
		]]>
	</select> 
	
	<!-- 비밀번호 변경 -->
	<update id="updatePw" parameterType="memberVO" >
	update user set userPwd = #{userPwd} where userId = #{userId}
	</update>
	
		
	  
	<insert id="insertMember" parameterType="memberVO">
		<![CDATA[
			insert into user(uid, userId, userPwd, userName, userBirth, userPhoneNumber, userGender, userType)
			values(#{uid}, #{userId}, #{userPwd}, #{userName}, #{userBirth}, #{userPhoneNumber}, #{userGender}, #{userType})
		]]>
	</insert>
	
	<insert id="insertMember2" parameterType="java.util.Map">
		<![CDATA[
			insert into user(id, pwd, name, email)
			values(#{id}, #{pwd}, #{name}, #{email})
		]]>
	</insert>
	
	<update id="updateMember" parameterType="memberVO">
		<![CDATA[
			updateuser
			set pwd=#{pwd}, name=#{name}, email=#{email}
			where id=#{id}
		]]>
	</update>
	
	<delete id="deleteMember" parameterType="String">
		<![CDATA[
			delete from user
			where 
			id=#{id}
		]]>
	</delete>
		
		<!-- 로그인 -->
	<select id="loginById" resultType="memberVO" parameterType="memberVO">
		<![CDATA[
			select * from user
			where userId = #{userId} and userPwd = #{userPwd}
		]]>
	</select>
	
	 <!--카카오-->
	<select id="findkakao" parameterType="java.util.HashMap" resultType="kakaoVO">
		select * from kakao_table where k_name=#{nickname} and k_email=#{email}
	</select>
	
	<insert id="kakaoinsert" parameterType="java.util.HashMap">
		insert into kakao_table(uid, k_name, k_email)
			values(#{uid}, #{nickname}, #{email})
	</insert>
	
	<!-- 네이버 -->
	<select id="findNaver" parameterType="NaverVO" resultType="NaverVO">
		select * from naver_table where n_name=#{n_name} and n_email=#{n_email}
	</select>
	
	<insert id="naverInsert" parameterType="NaverVO">
		insert into naver_table(uid, n_name, n_email )
			values( #{uid}, #{n_name}, #{n_email} )
	</insert>
	
	<!-- 회원정보수정 -->
	<update id="memberModify"> 
		<![CDATA[
			update user set
			userPwd = #{userPwd}, 
			userName= #{userName},
			userBirth = #{userBirth},
			userPhoneNumber = #{userPhoneNumber}
			where userId = #{userId}
		]]>
	</update>	
	
	<!-- 주문자 정보 -->
  	<select id="getMemberInfo" resultType="memberVO" parameterType="memberVO">
  	
	  	<![CDATA[
	  		SELECT * FROM user WHERE uid = #{uid}
	  	]]>
	  	
  	</select>
  	

  	<!-- 비지니스 회원정보 수정 -->
  	<select id="selectBusinessMember" resultMap="memberVO" parameterType="String">
  	
	  	<![CDATA[
	  		SELECT * FROM user WHERE uid = #{uid}
	  	]]>
	  	
  	</select>
  	
  	

</mapper>